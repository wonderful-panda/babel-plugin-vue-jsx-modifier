// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`__capture basic functionary (nativeOn) 1`] = `
"<MyComponent {...{
  nativeOn: {
    '!scroll': this.onScrollCapture
  }
}} />;"
`;

exports[`__capture basic functionary (on) 1`] = `
"<div {...{
  on: {
    '!scroll': this.onScrollCapture
  }
}} />;"
`;

exports[`__sync avoid using argument name which shadows existing variables 1`] = `
"const _v0 = <MyComponent foo={state.fooValue} bar={state.barValue} {...{
  on: {
    'update:foo': _v1 => {
      state.fooValue = _v1;
    },
    'update:bar': _v1 => {
      state.barValue = _v1;
    }
  }
}} />;"
`;

exports[`__sync basic functionary 1`] = `
"<MyComponent foo={state.fooValue} {...{
  on: {
    'update:foo': _v0 => {
      state.fooValue = _v0;
    }
  }
}} />;"
`;

exports[`__sync object name of __sync method is just ignored 1`] = `
"<MyComponent foo={state.fooValue} {...{
  on: {
    'update:foo': _v0 => {
      state.fooValue = _v0;
    }
  }
}} />;"
`;

exports[`__sync update handlers of multiple sync props are in same object 1`] = `
"<MyComponent foo={state.fooValue} bar={state.barValue} {...{
  on: {
    'update:foo': _v0 => {
      state.fooValue = _v0;
    },
    'update:bar': _v0 => {
      state.barValue = _v0;
    }
  }
}} />;"
`;

exports[`__sync works for deep member expression 1`] = `
"<MyComponent foo={state.foo.bar.baz} {...{
  on: {
    'update:foo': _v0 => {
      state.foo.bar.baz = _v0;
    }
  }
}} />;"
`;

exports[`__sync works for literal member expression 1`] = `
"<MyComponent foo={state['foo-key']} {...{
  on: {
    'update:foo': _v0 => {
      state['foo-key'] = _v0;
    }
  }
}} />;"
`;
